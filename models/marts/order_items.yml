models:
  - name: orderItems
    columns:
      - name: orderItemId
        data_tests:
          - not_null
          - unique
      - name: orderId
        data_tests:
          - relationships:
              to: ref('orders')
              field: orderId

unit_tests:
  - name: testSupplyCostsSumCorrectly
    description: "Test that the counts of drinks and food orders convert to booleans properly."
    model: orderItems
    given:
      - input: ref('stgSupplies')
        rows:
          - { productId: 1, supplyCost: 4.50 }
          - { productId: 2, supplyCost: 3.50 }
          - { productId: 2, supplyCost: 5.00 }
      - input: ref('stgProducts')
        rows:
          - { productId: 1 }
          - { productId: 2 }
      - input: ref('stgOrderItems')
        rows:
          - { orderId: 1, productId: 1 }
          - { orderId: 2, productId: 2 }
          - { orderId: 2, productId: 2 }
      - input: ref('stgOrders')
        rows:
          - { orderId: 1 }
          - { orderId: 2 }
    expect:
      rows:
        - { orderId: 1, productId: 1, supplyCost: 4.50 }
        - { orderId: 2, productId: 2, supplyCost: 8.50 }
        - { orderId: 2, productId: 2, supplyCost: 8.50 }

semantic_models:
  - name: orderItem
    defaults:
      agg_time_dimension: orderedAt
    description: |
      Items contained in each order. The grain of the table is one row per order item.
    model: ref('orderItems')
    entities:
      - name: orderItem
        type: primary
        expr: orderItemId
      - name: orderId
        type: foreign
        expr: orderId
      - name: product
        type: foreign
        expr: productId
    dimensions:
      - name: orderedAt
        expr: orderedAt
        type: time
        type_params:
          time_granularity: day
      - name: isFoodItem
        type: categorical
      - name: isDrinkItem
        type: categorical
    measures:
      - name: revenue
        description: The revenue generated for each order item. Revenue is calculated as a sum of revenue associated with each product in an order.
        agg: sum
        expr: productPrice
      - name: foodRevenue
        description: The revenue generated for each order item. Revenue is calculated as a sum of revenue associated with each product in an order.
        agg: sum
        expr: case when isFoodItem is true then productPrice else 0 end
      - name: drinkRevenue
        description: The revenue generated for each order item. Revenue is calculated as a sum of revenue associated with each product in an order.
        agg: sum
        expr: case when isDrinkItem is true then productPrice else 0 end
      - name: medianRevenue
        description: The median revenue generated for each order item.
        agg: median
        expr: productPrice

metrics:
  # Simple metrics
  - name: revenue
    description: Sum of the product revenue for each order item. Excludes tax.
    type: simple
    label: Revenue
    type_params:
      measure: revenue
  - name: orderCost
    description: Sum of cost for each order item.
    label: Order Cost
    type: simple
    type_params:
      measure: orderCost
  - name: medianRevenue
    description: The median revenue for each order item. Excludes tax.
    type: simple
    label: Median Revenue
    type_params:
      measure: medianRevenue
  - name: foodRevenue
    description: The revenue from food in each order
    label: Food Revenue
    type: simple
    type_params:
      measure: foodRevenue
  - name: drinkRevenue
    description: The revenue from drinks in each order
    label: Drink Revenue
    type: simple
    type_params:
      measure: drinkRevenue

  # Ratio Metrics
  - name: foodRevenuePct
    description: The % of order revenue from food.
    label: Food Revenue %
    type: ratio
    type_params:
      numerator: foodRevenue
      denominator: revenue
  - name: drinkRevenuePct
    description: The % of order revenue from drinks.
    label: Drink Revenue %
    type: ratio
    type_params:
      numerator: drinkRevenue
      denominator: revenue

  # Derived Metrics
  - name: revenueGrowthMom
    description: "Percentage growth of revenue compared to 1 month ago. Excluded tax"
    type: derived
    label: Revenue Growth % M/M
    type_params:
      expr: (currentRevenue - revenuePrevMonth)*100/revenuePrevMonth
      metrics:
        - name: revenue
          alias: currentRevenue
        - name: revenue
          offset_window: 1 month
          alias: revenuePrevMonth
  - name: orderGrossProfit
    description: Gross profit from each order.
    type: derived
    label: Order Gross Profit
    type_params:
      expr: revenue - cost
      metrics:
        - name: revenue
        - name: orderCost
          alias: cost

  #Cumulative Metrics
  - name: cumulativeRevenue
    description: The cumulative revenue for all orders.
    label: Cumulative Revenue (All Time)
    type: cumulative
    type_params:
      measure: revenue

saved_queries:
  - name: revenueMetrics
    query_params:
      metrics:
        - revenue
        - foodRevenue
        - drinkRevenue
      group_by:
        - TimeDimension('metricTime', 'day')
    exports:
      - name: revenueMetrics
        config:
          export_as: table